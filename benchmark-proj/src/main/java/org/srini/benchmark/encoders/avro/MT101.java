/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package org.srini.benchmark.encoders.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class MT101 extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 3531235842078661426L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"MT101\",\"namespace\":\"org.srini.benchmark.encoders.avro\",\"fields\":[{\"name\":\"BasicHeaderBlock\",\"type\":{\"type\":\"record\",\"name\":\"BasicHeaderBlock\",\"fields\":[{\"name\":\"ApplicationIdentifier\",\"type\":\"string\"},{\"name\":\"ServiceIdentifier\",\"type\":\"int\"},{\"name\":\"LTAddress\",\"type\":\"string\"},{\"name\":\"SessionNumber\",\"type\":\"string\"},{\"name\":\"SequenceNumber\",\"type\":\"string\"}]}},{\"name\":\"ApplicationHeaderInputBlock\",\"type\":{\"type\":\"record\",\"name\":\"ApplicationHeaderInputBlock\",\"fields\":[{\"name\":\"Indicator\",\"type\":\"string\"},{\"name\":\"MessageType\",\"type\":\"int\"},{\"name\":\"DestinationAddress\",\"type\":{\"type\":\"record\",\"name\":\"DestinationAddress\",\"fields\":[{\"name\":\"BankCode\",\"type\":\"string\"},{\"name\":\"CountryCode\",\"type\":\"string\"},{\"name\":\"LocationCode\",\"type\":\"string\"},{\"name\":\"LogicalTerminalCode\",\"type\":\"int\"},{\"name\":\"BranchCode\",\"type\":\"string\"}]}},{\"name\":\"MessagePriority\",\"type\":\"string\"},{\"name\":\"DeliveryMonitoring\",\"type\":\"int\"},{\"name\":\"ObsolescencePeriod\",\"type\":\"int\"}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<MT101> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<MT101> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<MT101> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<MT101> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<MT101> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this MT101 to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a MT101 from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a MT101 instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static MT101 fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private org.srini.benchmark.encoders.avro.BasicHeaderBlock BasicHeaderBlock;
  private org.srini.benchmark.encoders.avro.ApplicationHeaderInputBlock ApplicationHeaderInputBlock;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public MT101() {}

  /**
   * All-args constructor.
   * @param BasicHeaderBlock The new value for BasicHeaderBlock
   * @param ApplicationHeaderInputBlock The new value for ApplicationHeaderInputBlock
   */
  public MT101(org.srini.benchmark.encoders.avro.BasicHeaderBlock BasicHeaderBlock, org.srini.benchmark.encoders.avro.ApplicationHeaderInputBlock ApplicationHeaderInputBlock) {
    this.BasicHeaderBlock = BasicHeaderBlock;
    this.ApplicationHeaderInputBlock = ApplicationHeaderInputBlock;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return BasicHeaderBlock;
    case 1: return ApplicationHeaderInputBlock;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: BasicHeaderBlock = (org.srini.benchmark.encoders.avro.BasicHeaderBlock)value$; break;
    case 1: ApplicationHeaderInputBlock = (org.srini.benchmark.encoders.avro.ApplicationHeaderInputBlock)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'BasicHeaderBlock' field.
   * @return The value of the 'BasicHeaderBlock' field.
   */
  public org.srini.benchmark.encoders.avro.BasicHeaderBlock getBasicHeaderBlock() {
    return BasicHeaderBlock;
  }


  /**
   * Sets the value of the 'BasicHeaderBlock' field.
   * @param value the value to set.
   */
  public void setBasicHeaderBlock(org.srini.benchmark.encoders.avro.BasicHeaderBlock value) {
    this.BasicHeaderBlock = value;
  }

  /**
   * Gets the value of the 'ApplicationHeaderInputBlock' field.
   * @return The value of the 'ApplicationHeaderInputBlock' field.
   */
  public org.srini.benchmark.encoders.avro.ApplicationHeaderInputBlock getApplicationHeaderInputBlock() {
    return ApplicationHeaderInputBlock;
  }


  /**
   * Sets the value of the 'ApplicationHeaderInputBlock' field.
   * @param value the value to set.
   */
  public void setApplicationHeaderInputBlock(org.srini.benchmark.encoders.avro.ApplicationHeaderInputBlock value) {
    this.ApplicationHeaderInputBlock = value;
  }

  /**
   * Creates a new MT101 RecordBuilder.
   * @return A new MT101 RecordBuilder
   */
  public static org.srini.benchmark.encoders.avro.MT101.Builder newBuilder() {
    return new org.srini.benchmark.encoders.avro.MT101.Builder();
  }

  /**
   * Creates a new MT101 RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new MT101 RecordBuilder
   */
  public static org.srini.benchmark.encoders.avro.MT101.Builder newBuilder(org.srini.benchmark.encoders.avro.MT101.Builder other) {
    if (other == null) {
      return new org.srini.benchmark.encoders.avro.MT101.Builder();
    } else {
      return new org.srini.benchmark.encoders.avro.MT101.Builder(other);
    }
  }

  /**
   * Creates a new MT101 RecordBuilder by copying an existing MT101 instance.
   * @param other The existing instance to copy.
   * @return A new MT101 RecordBuilder
   */
  public static org.srini.benchmark.encoders.avro.MT101.Builder newBuilder(org.srini.benchmark.encoders.avro.MT101 other) {
    if (other == null) {
      return new org.srini.benchmark.encoders.avro.MT101.Builder();
    } else {
      return new org.srini.benchmark.encoders.avro.MT101.Builder(other);
    }
  }

  /**
   * RecordBuilder for MT101 instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<MT101>
    implements org.apache.avro.data.RecordBuilder<MT101> {

    private org.srini.benchmark.encoders.avro.BasicHeaderBlock BasicHeaderBlock;
    private org.srini.benchmark.encoders.avro.BasicHeaderBlock.Builder BasicHeaderBlockBuilder;
    private org.srini.benchmark.encoders.avro.ApplicationHeaderInputBlock ApplicationHeaderInputBlock;
    private org.srini.benchmark.encoders.avro.ApplicationHeaderInputBlock.Builder ApplicationHeaderInputBlockBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.srini.benchmark.encoders.avro.MT101.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.BasicHeaderBlock)) {
        this.BasicHeaderBlock = data().deepCopy(fields()[0].schema(), other.BasicHeaderBlock);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (other.hasBasicHeaderBlockBuilder()) {
        this.BasicHeaderBlockBuilder = org.srini.benchmark.encoders.avro.BasicHeaderBlock.newBuilder(other.getBasicHeaderBlockBuilder());
      }
      if (isValidValue(fields()[1], other.ApplicationHeaderInputBlock)) {
        this.ApplicationHeaderInputBlock = data().deepCopy(fields()[1].schema(), other.ApplicationHeaderInputBlock);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (other.hasApplicationHeaderInputBlockBuilder()) {
        this.ApplicationHeaderInputBlockBuilder = org.srini.benchmark.encoders.avro.ApplicationHeaderInputBlock.newBuilder(other.getApplicationHeaderInputBlockBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing MT101 instance
     * @param other The existing instance to copy.
     */
    private Builder(org.srini.benchmark.encoders.avro.MT101 other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.BasicHeaderBlock)) {
        this.BasicHeaderBlock = data().deepCopy(fields()[0].schema(), other.BasicHeaderBlock);
        fieldSetFlags()[0] = true;
      }
      this.BasicHeaderBlockBuilder = null;
      if (isValidValue(fields()[1], other.ApplicationHeaderInputBlock)) {
        this.ApplicationHeaderInputBlock = data().deepCopy(fields()[1].schema(), other.ApplicationHeaderInputBlock);
        fieldSetFlags()[1] = true;
      }
      this.ApplicationHeaderInputBlockBuilder = null;
    }

    /**
      * Gets the value of the 'BasicHeaderBlock' field.
      * @return The value.
      */
    public org.srini.benchmark.encoders.avro.BasicHeaderBlock getBasicHeaderBlock() {
      return BasicHeaderBlock;
    }


    /**
      * Sets the value of the 'BasicHeaderBlock' field.
      * @param value The value of 'BasicHeaderBlock'.
      * @return This builder.
      */
    public org.srini.benchmark.encoders.avro.MT101.Builder setBasicHeaderBlock(org.srini.benchmark.encoders.avro.BasicHeaderBlock value) {
      validate(fields()[0], value);
      this.BasicHeaderBlockBuilder = null;
      this.BasicHeaderBlock = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'BasicHeaderBlock' field has been set.
      * @return True if the 'BasicHeaderBlock' field has been set, false otherwise.
      */
    public boolean hasBasicHeaderBlock() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'BasicHeaderBlock' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.srini.benchmark.encoders.avro.BasicHeaderBlock.Builder getBasicHeaderBlockBuilder() {
      if (BasicHeaderBlockBuilder == null) {
        if (hasBasicHeaderBlock()) {
          setBasicHeaderBlockBuilder(org.srini.benchmark.encoders.avro.BasicHeaderBlock.newBuilder(BasicHeaderBlock));
        } else {
          setBasicHeaderBlockBuilder(org.srini.benchmark.encoders.avro.BasicHeaderBlock.newBuilder());
        }
      }
      return BasicHeaderBlockBuilder;
    }

    /**
     * Sets the Builder instance for the 'BasicHeaderBlock' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.srini.benchmark.encoders.avro.MT101.Builder setBasicHeaderBlockBuilder(org.srini.benchmark.encoders.avro.BasicHeaderBlock.Builder value) {
      clearBasicHeaderBlock();
      BasicHeaderBlockBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'BasicHeaderBlock' field has an active Builder instance
     * @return True if the 'BasicHeaderBlock' field has an active Builder instance
     */
    public boolean hasBasicHeaderBlockBuilder() {
      return BasicHeaderBlockBuilder != null;
    }

    /**
      * Clears the value of the 'BasicHeaderBlock' field.
      * @return This builder.
      */
    public org.srini.benchmark.encoders.avro.MT101.Builder clearBasicHeaderBlock() {
      BasicHeaderBlock = null;
      BasicHeaderBlockBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'ApplicationHeaderInputBlock' field.
      * @return The value.
      */
    public org.srini.benchmark.encoders.avro.ApplicationHeaderInputBlock getApplicationHeaderInputBlock() {
      return ApplicationHeaderInputBlock;
    }


    /**
      * Sets the value of the 'ApplicationHeaderInputBlock' field.
      * @param value The value of 'ApplicationHeaderInputBlock'.
      * @return This builder.
      */
    public org.srini.benchmark.encoders.avro.MT101.Builder setApplicationHeaderInputBlock(org.srini.benchmark.encoders.avro.ApplicationHeaderInputBlock value) {
      validate(fields()[1], value);
      this.ApplicationHeaderInputBlockBuilder = null;
      this.ApplicationHeaderInputBlock = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'ApplicationHeaderInputBlock' field has been set.
      * @return True if the 'ApplicationHeaderInputBlock' field has been set, false otherwise.
      */
    public boolean hasApplicationHeaderInputBlock() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'ApplicationHeaderInputBlock' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.srini.benchmark.encoders.avro.ApplicationHeaderInputBlock.Builder getApplicationHeaderInputBlockBuilder() {
      if (ApplicationHeaderInputBlockBuilder == null) {
        if (hasApplicationHeaderInputBlock()) {
          setApplicationHeaderInputBlockBuilder(org.srini.benchmark.encoders.avro.ApplicationHeaderInputBlock.newBuilder(ApplicationHeaderInputBlock));
        } else {
          setApplicationHeaderInputBlockBuilder(org.srini.benchmark.encoders.avro.ApplicationHeaderInputBlock.newBuilder());
        }
      }
      return ApplicationHeaderInputBlockBuilder;
    }

    /**
     * Sets the Builder instance for the 'ApplicationHeaderInputBlock' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.srini.benchmark.encoders.avro.MT101.Builder setApplicationHeaderInputBlockBuilder(org.srini.benchmark.encoders.avro.ApplicationHeaderInputBlock.Builder value) {
      clearApplicationHeaderInputBlock();
      ApplicationHeaderInputBlockBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'ApplicationHeaderInputBlock' field has an active Builder instance
     * @return True if the 'ApplicationHeaderInputBlock' field has an active Builder instance
     */
    public boolean hasApplicationHeaderInputBlockBuilder() {
      return ApplicationHeaderInputBlockBuilder != null;
    }

    /**
      * Clears the value of the 'ApplicationHeaderInputBlock' field.
      * @return This builder.
      */
    public org.srini.benchmark.encoders.avro.MT101.Builder clearApplicationHeaderInputBlock() {
      ApplicationHeaderInputBlock = null;
      ApplicationHeaderInputBlockBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public MT101 build() {
      try {
        MT101 record = new MT101();
        if (BasicHeaderBlockBuilder != null) {
          try {
            record.BasicHeaderBlock = this.BasicHeaderBlockBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("BasicHeaderBlock"));
            throw e;
          }
        } else {
          record.BasicHeaderBlock = fieldSetFlags()[0] ? this.BasicHeaderBlock : (org.srini.benchmark.encoders.avro.BasicHeaderBlock) defaultValue(fields()[0]);
        }
        if (ApplicationHeaderInputBlockBuilder != null) {
          try {
            record.ApplicationHeaderInputBlock = this.ApplicationHeaderInputBlockBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("ApplicationHeaderInputBlock"));
            throw e;
          }
        } else {
          record.ApplicationHeaderInputBlock = fieldSetFlags()[1] ? this.ApplicationHeaderInputBlock : (org.srini.benchmark.encoders.avro.ApplicationHeaderInputBlock) defaultValue(fields()[1]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<MT101>
    WRITER$ = (org.apache.avro.io.DatumWriter<MT101>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<MT101>
    READER$ = (org.apache.avro.io.DatumReader<MT101>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    this.BasicHeaderBlock.customEncode(out);

    this.ApplicationHeaderInputBlock.customEncode(out);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (this.BasicHeaderBlock == null) {
        this.BasicHeaderBlock = new org.srini.benchmark.encoders.avro.BasicHeaderBlock();
      }
      this.BasicHeaderBlock.customDecode(in);

      if (this.ApplicationHeaderInputBlock == null) {
        this.ApplicationHeaderInputBlock = new org.srini.benchmark.encoders.avro.ApplicationHeaderInputBlock();
      }
      this.ApplicationHeaderInputBlock.customDecode(in);

    } else {
      for (int i = 0; i < 2; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (this.BasicHeaderBlock == null) {
            this.BasicHeaderBlock = new org.srini.benchmark.encoders.avro.BasicHeaderBlock();
          }
          this.BasicHeaderBlock.customDecode(in);
          break;

        case 1:
          if (this.ApplicationHeaderInputBlock == null) {
            this.ApplicationHeaderInputBlock = new org.srini.benchmark.encoders.avro.ApplicationHeaderInputBlock();
          }
          this.ApplicationHeaderInputBlock.customDecode(in);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










