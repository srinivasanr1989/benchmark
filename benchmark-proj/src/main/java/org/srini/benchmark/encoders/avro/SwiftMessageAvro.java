/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package org.srini.benchmark.encoders.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class SwiftMessageAvro extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -3557673444270325141L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"SwiftMessageAvro\",\"namespace\":\"org.srini.benchmark.encoders.avro\",\"fields\":[{\"name\":\"MT101\",\"type\":{\"type\":\"record\",\"name\":\"MT101\",\"fields\":[{\"name\":\"BasicHeaderBlock\",\"type\":{\"type\":\"record\",\"name\":\"BasicHeaderBlock\",\"fields\":[{\"name\":\"ApplicationIdentifier\",\"type\":\"string\"},{\"name\":\"ServiceIdentifier\",\"type\":\"int\"},{\"name\":\"LTAddress\",\"type\":\"string\"},{\"name\":\"SessionNumber\",\"type\":\"string\"},{\"name\":\"SequenceNumber\",\"type\":\"string\"}]}},{\"name\":\"ApplicationHeaderInputBlock\",\"type\":{\"type\":\"record\",\"name\":\"ApplicationHeaderInputBlock\",\"fields\":[{\"name\":\"Indicator\",\"type\":\"string\"},{\"name\":\"MessageType\",\"type\":\"int\"},{\"name\":\"DestinationAddress\",\"type\":{\"type\":\"record\",\"name\":\"DestinationAddress\",\"fields\":[{\"name\":\"BankCode\",\"type\":\"string\"},{\"name\":\"CountryCode\",\"type\":\"string\"},{\"name\":\"LocationCode\",\"type\":\"string\"},{\"name\":\"LogicalTerminalCode\",\"type\":\"int\"},{\"name\":\"BranchCode\",\"type\":\"string\"}]}},{\"name\":\"MessagePriority\",\"type\":\"string\"},{\"name\":\"DeliveryMonitoring\",\"type\":\"int\"},{\"name\":\"ObsolescencePeriod\",\"type\":\"int\"}]}}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<SwiftMessageAvro> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<SwiftMessageAvro> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<SwiftMessageAvro> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<SwiftMessageAvro> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<SwiftMessageAvro> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this SwiftMessageAvro to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a SwiftMessageAvro from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a SwiftMessageAvro instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static SwiftMessageAvro fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private org.srini.benchmark.encoders.avro.MT101 MT101;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public SwiftMessageAvro() {}

  /**
   * All-args constructor.
   * @param MT101 The new value for MT101
   */
  public SwiftMessageAvro(org.srini.benchmark.encoders.avro.MT101 MT101) {
    this.MT101 = MT101;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return MT101;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: MT101 = (org.srini.benchmark.encoders.avro.MT101)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'MT101' field.
   * @return The value of the 'MT101' field.
   */
  public org.srini.benchmark.encoders.avro.MT101 getMT101() {
    return MT101;
  }


  /**
   * Sets the value of the 'MT101' field.
   * @param value the value to set.
   */
  public void setMT101(org.srini.benchmark.encoders.avro.MT101 value) {
    this.MT101 = value;
  }

  /**
   * Creates a new SwiftMessageAvro RecordBuilder.
   * @return A new SwiftMessageAvro RecordBuilder
   */
  public static org.srini.benchmark.encoders.avro.SwiftMessageAvro.Builder newBuilder() {
    return new org.srini.benchmark.encoders.avro.SwiftMessageAvro.Builder();
  }

  /**
   * Creates a new SwiftMessageAvro RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new SwiftMessageAvro RecordBuilder
   */
  public static org.srini.benchmark.encoders.avro.SwiftMessageAvro.Builder newBuilder(org.srini.benchmark.encoders.avro.SwiftMessageAvro.Builder other) {
    if (other == null) {
      return new org.srini.benchmark.encoders.avro.SwiftMessageAvro.Builder();
    } else {
      return new org.srini.benchmark.encoders.avro.SwiftMessageAvro.Builder(other);
    }
  }

  /**
   * Creates a new SwiftMessageAvro RecordBuilder by copying an existing SwiftMessageAvro instance.
   * @param other The existing instance to copy.
   * @return A new SwiftMessageAvro RecordBuilder
   */
  public static org.srini.benchmark.encoders.avro.SwiftMessageAvro.Builder newBuilder(org.srini.benchmark.encoders.avro.SwiftMessageAvro other) {
    if (other == null) {
      return new org.srini.benchmark.encoders.avro.SwiftMessageAvro.Builder();
    } else {
      return new org.srini.benchmark.encoders.avro.SwiftMessageAvro.Builder(other);
    }
  }

  /**
   * RecordBuilder for SwiftMessageAvro instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<SwiftMessageAvro>
    implements org.apache.avro.data.RecordBuilder<SwiftMessageAvro> {

    private org.srini.benchmark.encoders.avro.MT101 MT101;
    private org.srini.benchmark.encoders.avro.MT101.Builder MT101Builder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.srini.benchmark.encoders.avro.SwiftMessageAvro.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.MT101)) {
        this.MT101 = data().deepCopy(fields()[0].schema(), other.MT101);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (other.hasMT101Builder()) {
        this.MT101Builder = org.srini.benchmark.encoders.avro.MT101.newBuilder(other.getMT101Builder());
      }
    }

    /**
     * Creates a Builder by copying an existing SwiftMessageAvro instance
     * @param other The existing instance to copy.
     */
    private Builder(org.srini.benchmark.encoders.avro.SwiftMessageAvro other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.MT101)) {
        this.MT101 = data().deepCopy(fields()[0].schema(), other.MT101);
        fieldSetFlags()[0] = true;
      }
      this.MT101Builder = null;
    }

    /**
      * Gets the value of the 'MT101' field.
      * @return The value.
      */
    public org.srini.benchmark.encoders.avro.MT101 getMT101() {
      return MT101;
    }


    /**
      * Sets the value of the 'MT101' field.
      * @param value The value of 'MT101'.
      * @return This builder.
      */
    public org.srini.benchmark.encoders.avro.SwiftMessageAvro.Builder setMT101(org.srini.benchmark.encoders.avro.MT101 value) {
      validate(fields()[0], value);
      this.MT101Builder = null;
      this.MT101 = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'MT101' field has been set.
      * @return True if the 'MT101' field has been set, false otherwise.
      */
    public boolean hasMT101() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'MT101' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.srini.benchmark.encoders.avro.MT101.Builder getMT101Builder() {
      if (MT101Builder == null) {
        if (hasMT101()) {
          setMT101Builder(org.srini.benchmark.encoders.avro.MT101.newBuilder(MT101));
        } else {
          setMT101Builder(org.srini.benchmark.encoders.avro.MT101.newBuilder());
        }
      }
      return MT101Builder;
    }

    /**
     * Sets the Builder instance for the 'MT101' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.srini.benchmark.encoders.avro.SwiftMessageAvro.Builder setMT101Builder(org.srini.benchmark.encoders.avro.MT101.Builder value) {
      clearMT101();
      MT101Builder = value;
      return this;
    }

    /**
     * Checks whether the 'MT101' field has an active Builder instance
     * @return True if the 'MT101' field has an active Builder instance
     */
    public boolean hasMT101Builder() {
      return MT101Builder != null;
    }

    /**
      * Clears the value of the 'MT101' field.
      * @return This builder.
      */
    public org.srini.benchmark.encoders.avro.SwiftMessageAvro.Builder clearMT101() {
      MT101 = null;
      MT101Builder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public SwiftMessageAvro build() {
      try {
        SwiftMessageAvro record = new SwiftMessageAvro();
        if (MT101Builder != null) {
          try {
            record.MT101 = this.MT101Builder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("MT101"));
            throw e;
          }
        } else {
          record.MT101 = fieldSetFlags()[0] ? this.MT101 : (org.srini.benchmark.encoders.avro.MT101) defaultValue(fields()[0]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<SwiftMessageAvro>
    WRITER$ = (org.apache.avro.io.DatumWriter<SwiftMessageAvro>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<SwiftMessageAvro>
    READER$ = (org.apache.avro.io.DatumReader<SwiftMessageAvro>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    this.MT101.customEncode(out);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (this.MT101 == null) {
        this.MT101 = new org.srini.benchmark.encoders.avro.MT101();
      }
      this.MT101.customDecode(in);

    } else {
      for (int i = 0; i < 1; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (this.MT101 == null) {
            this.MT101 = new org.srini.benchmark.encoders.avro.MT101();
          }
          this.MT101.customDecode(in);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










