/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package org.srini.benchmark.encoders.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class ApplicationHeaderInputBlock extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 2184880008488160139L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ApplicationHeaderInputBlock\",\"namespace\":\"org.srini.benchmark.encoders.avro\",\"fields\":[{\"name\":\"Indicator\",\"type\":\"string\"},{\"name\":\"MessageType\",\"type\":\"int\"},{\"name\":\"DestinationAddress\",\"type\":{\"type\":\"record\",\"name\":\"DestinationAddress\",\"fields\":[{\"name\":\"BankCode\",\"type\":\"string\"},{\"name\":\"CountryCode\",\"type\":\"string\"},{\"name\":\"LocationCode\",\"type\":\"string\"},{\"name\":\"LogicalTerminalCode\",\"type\":\"int\"},{\"name\":\"BranchCode\",\"type\":\"string\"}]}},{\"name\":\"MessagePriority\",\"type\":\"string\"},{\"name\":\"DeliveryMonitoring\",\"type\":\"int\"},{\"name\":\"ObsolescencePeriod\",\"type\":\"int\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<ApplicationHeaderInputBlock> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ApplicationHeaderInputBlock> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<ApplicationHeaderInputBlock> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<ApplicationHeaderInputBlock> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<ApplicationHeaderInputBlock> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this ApplicationHeaderInputBlock to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a ApplicationHeaderInputBlock from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a ApplicationHeaderInputBlock instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static ApplicationHeaderInputBlock fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.CharSequence Indicator;
  private int MessageType;
  private org.srini.benchmark.encoders.avro.DestinationAddress DestinationAddress;
  private java.lang.CharSequence MessagePriority;
  private int DeliveryMonitoring;
  private int ObsolescencePeriod;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ApplicationHeaderInputBlock() {}

  /**
   * All-args constructor.
   * @param Indicator The new value for Indicator
   * @param MessageType The new value for MessageType
   * @param DestinationAddress The new value for DestinationAddress
   * @param MessagePriority The new value for MessagePriority
   * @param DeliveryMonitoring The new value for DeliveryMonitoring
   * @param ObsolescencePeriod The new value for ObsolescencePeriod
   */
  public ApplicationHeaderInputBlock(java.lang.CharSequence Indicator, java.lang.Integer MessageType, org.srini.benchmark.encoders.avro.DestinationAddress DestinationAddress, java.lang.CharSequence MessagePriority, java.lang.Integer DeliveryMonitoring, java.lang.Integer ObsolescencePeriod) {
    this.Indicator = Indicator;
    this.MessageType = MessageType;
    this.DestinationAddress = DestinationAddress;
    this.MessagePriority = MessagePriority;
    this.DeliveryMonitoring = DeliveryMonitoring;
    this.ObsolescencePeriod = ObsolescencePeriod;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return Indicator;
    case 1: return MessageType;
    case 2: return DestinationAddress;
    case 3: return MessagePriority;
    case 4: return DeliveryMonitoring;
    case 5: return ObsolescencePeriod;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: Indicator = (java.lang.CharSequence)value$; break;
    case 1: MessageType = (java.lang.Integer)value$; break;
    case 2: DestinationAddress = (org.srini.benchmark.encoders.avro.DestinationAddress)value$; break;
    case 3: MessagePriority = (java.lang.CharSequence)value$; break;
    case 4: DeliveryMonitoring = (java.lang.Integer)value$; break;
    case 5: ObsolescencePeriod = (java.lang.Integer)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'Indicator' field.
   * @return The value of the 'Indicator' field.
   */
  public java.lang.CharSequence getIndicator() {
    return Indicator;
  }


  /**
   * Sets the value of the 'Indicator' field.
   * @param value the value to set.
   */
  public void setIndicator(java.lang.CharSequence value) {
    this.Indicator = value;
  }

  /**
   * Gets the value of the 'MessageType' field.
   * @return The value of the 'MessageType' field.
   */
  public int getMessageType() {
    return MessageType;
  }


  /**
   * Sets the value of the 'MessageType' field.
   * @param value the value to set.
   */
  public void setMessageType(int value) {
    this.MessageType = value;
  }

  /**
   * Gets the value of the 'DestinationAddress' field.
   * @return The value of the 'DestinationAddress' field.
   */
  public org.srini.benchmark.encoders.avro.DestinationAddress getDestinationAddress() {
    return DestinationAddress;
  }


  /**
   * Sets the value of the 'DestinationAddress' field.
   * @param value the value to set.
   */
  public void setDestinationAddress(org.srini.benchmark.encoders.avro.DestinationAddress value) {
    this.DestinationAddress = value;
  }

  /**
   * Gets the value of the 'MessagePriority' field.
   * @return The value of the 'MessagePriority' field.
   */
  public java.lang.CharSequence getMessagePriority() {
    return MessagePriority;
  }


  /**
   * Sets the value of the 'MessagePriority' field.
   * @param value the value to set.
   */
  public void setMessagePriority(java.lang.CharSequence value) {
    this.MessagePriority = value;
  }

  /**
   * Gets the value of the 'DeliveryMonitoring' field.
   * @return The value of the 'DeliveryMonitoring' field.
   */
  public int getDeliveryMonitoring() {
    return DeliveryMonitoring;
  }


  /**
   * Sets the value of the 'DeliveryMonitoring' field.
   * @param value the value to set.
   */
  public void setDeliveryMonitoring(int value) {
    this.DeliveryMonitoring = value;
  }

  /**
   * Gets the value of the 'ObsolescencePeriod' field.
   * @return The value of the 'ObsolescencePeriod' field.
   */
  public int getObsolescencePeriod() {
    return ObsolescencePeriod;
  }


  /**
   * Sets the value of the 'ObsolescencePeriod' field.
   * @param value the value to set.
   */
  public void setObsolescencePeriod(int value) {
    this.ObsolescencePeriod = value;
  }

  /**
   * Creates a new ApplicationHeaderInputBlock RecordBuilder.
   * @return A new ApplicationHeaderInputBlock RecordBuilder
   */
  public static org.srini.benchmark.encoders.avro.ApplicationHeaderInputBlock.Builder newBuilder() {
    return new org.srini.benchmark.encoders.avro.ApplicationHeaderInputBlock.Builder();
  }

  /**
   * Creates a new ApplicationHeaderInputBlock RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ApplicationHeaderInputBlock RecordBuilder
   */
  public static org.srini.benchmark.encoders.avro.ApplicationHeaderInputBlock.Builder newBuilder(org.srini.benchmark.encoders.avro.ApplicationHeaderInputBlock.Builder other) {
    if (other == null) {
      return new org.srini.benchmark.encoders.avro.ApplicationHeaderInputBlock.Builder();
    } else {
      return new org.srini.benchmark.encoders.avro.ApplicationHeaderInputBlock.Builder(other);
    }
  }

  /**
   * Creates a new ApplicationHeaderInputBlock RecordBuilder by copying an existing ApplicationHeaderInputBlock instance.
   * @param other The existing instance to copy.
   * @return A new ApplicationHeaderInputBlock RecordBuilder
   */
  public static org.srini.benchmark.encoders.avro.ApplicationHeaderInputBlock.Builder newBuilder(org.srini.benchmark.encoders.avro.ApplicationHeaderInputBlock other) {
    if (other == null) {
      return new org.srini.benchmark.encoders.avro.ApplicationHeaderInputBlock.Builder();
    } else {
      return new org.srini.benchmark.encoders.avro.ApplicationHeaderInputBlock.Builder(other);
    }
  }

  /**
   * RecordBuilder for ApplicationHeaderInputBlock instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ApplicationHeaderInputBlock>
    implements org.apache.avro.data.RecordBuilder<ApplicationHeaderInputBlock> {

    private java.lang.CharSequence Indicator;
    private int MessageType;
    private org.srini.benchmark.encoders.avro.DestinationAddress DestinationAddress;
    private org.srini.benchmark.encoders.avro.DestinationAddress.Builder DestinationAddressBuilder;
    private java.lang.CharSequence MessagePriority;
    private int DeliveryMonitoring;
    private int ObsolescencePeriod;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.srini.benchmark.encoders.avro.ApplicationHeaderInputBlock.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.Indicator)) {
        this.Indicator = data().deepCopy(fields()[0].schema(), other.Indicator);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.MessageType)) {
        this.MessageType = data().deepCopy(fields()[1].schema(), other.MessageType);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.DestinationAddress)) {
        this.DestinationAddress = data().deepCopy(fields()[2].schema(), other.DestinationAddress);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (other.hasDestinationAddressBuilder()) {
        this.DestinationAddressBuilder = org.srini.benchmark.encoders.avro.DestinationAddress.newBuilder(other.getDestinationAddressBuilder());
      }
      if (isValidValue(fields()[3], other.MessagePriority)) {
        this.MessagePriority = data().deepCopy(fields()[3].schema(), other.MessagePriority);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.DeliveryMonitoring)) {
        this.DeliveryMonitoring = data().deepCopy(fields()[4].schema(), other.DeliveryMonitoring);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.ObsolescencePeriod)) {
        this.ObsolescencePeriod = data().deepCopy(fields()[5].schema(), other.ObsolescencePeriod);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
    }

    /**
     * Creates a Builder by copying an existing ApplicationHeaderInputBlock instance
     * @param other The existing instance to copy.
     */
    private Builder(org.srini.benchmark.encoders.avro.ApplicationHeaderInputBlock other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.Indicator)) {
        this.Indicator = data().deepCopy(fields()[0].schema(), other.Indicator);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.MessageType)) {
        this.MessageType = data().deepCopy(fields()[1].schema(), other.MessageType);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.DestinationAddress)) {
        this.DestinationAddress = data().deepCopy(fields()[2].schema(), other.DestinationAddress);
        fieldSetFlags()[2] = true;
      }
      this.DestinationAddressBuilder = null;
      if (isValidValue(fields()[3], other.MessagePriority)) {
        this.MessagePriority = data().deepCopy(fields()[3].schema(), other.MessagePriority);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.DeliveryMonitoring)) {
        this.DeliveryMonitoring = data().deepCopy(fields()[4].schema(), other.DeliveryMonitoring);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.ObsolescencePeriod)) {
        this.ObsolescencePeriod = data().deepCopy(fields()[5].schema(), other.ObsolescencePeriod);
        fieldSetFlags()[5] = true;
      }
    }

    /**
      * Gets the value of the 'Indicator' field.
      * @return The value.
      */
    public java.lang.CharSequence getIndicator() {
      return Indicator;
    }


    /**
      * Sets the value of the 'Indicator' field.
      * @param value The value of 'Indicator'.
      * @return This builder.
      */
    public org.srini.benchmark.encoders.avro.ApplicationHeaderInputBlock.Builder setIndicator(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.Indicator = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'Indicator' field has been set.
      * @return True if the 'Indicator' field has been set, false otherwise.
      */
    public boolean hasIndicator() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'Indicator' field.
      * @return This builder.
      */
    public org.srini.benchmark.encoders.avro.ApplicationHeaderInputBlock.Builder clearIndicator() {
      Indicator = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'MessageType' field.
      * @return The value.
      */
    public int getMessageType() {
      return MessageType;
    }


    /**
      * Sets the value of the 'MessageType' field.
      * @param value The value of 'MessageType'.
      * @return This builder.
      */
    public org.srini.benchmark.encoders.avro.ApplicationHeaderInputBlock.Builder setMessageType(int value) {
      validate(fields()[1], value);
      this.MessageType = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'MessageType' field has been set.
      * @return True if the 'MessageType' field has been set, false otherwise.
      */
    public boolean hasMessageType() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'MessageType' field.
      * @return This builder.
      */
    public org.srini.benchmark.encoders.avro.ApplicationHeaderInputBlock.Builder clearMessageType() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'DestinationAddress' field.
      * @return The value.
      */
    public org.srini.benchmark.encoders.avro.DestinationAddress getDestinationAddress() {
      return DestinationAddress;
    }


    /**
      * Sets the value of the 'DestinationAddress' field.
      * @param value The value of 'DestinationAddress'.
      * @return This builder.
      */
    public org.srini.benchmark.encoders.avro.ApplicationHeaderInputBlock.Builder setDestinationAddress(org.srini.benchmark.encoders.avro.DestinationAddress value) {
      validate(fields()[2], value);
      this.DestinationAddressBuilder = null;
      this.DestinationAddress = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'DestinationAddress' field has been set.
      * @return True if the 'DestinationAddress' field has been set, false otherwise.
      */
    public boolean hasDestinationAddress() {
      return fieldSetFlags()[2];
    }

    /**
     * Gets the Builder instance for the 'DestinationAddress' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.srini.benchmark.encoders.avro.DestinationAddress.Builder getDestinationAddressBuilder() {
      if (DestinationAddressBuilder == null) {
        if (hasDestinationAddress()) {
          setDestinationAddressBuilder(org.srini.benchmark.encoders.avro.DestinationAddress.newBuilder(DestinationAddress));
        } else {
          setDestinationAddressBuilder(org.srini.benchmark.encoders.avro.DestinationAddress.newBuilder());
        }
      }
      return DestinationAddressBuilder;
    }

    /**
     * Sets the Builder instance for the 'DestinationAddress' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.srini.benchmark.encoders.avro.ApplicationHeaderInputBlock.Builder setDestinationAddressBuilder(org.srini.benchmark.encoders.avro.DestinationAddress.Builder value) {
      clearDestinationAddress();
      DestinationAddressBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'DestinationAddress' field has an active Builder instance
     * @return True if the 'DestinationAddress' field has an active Builder instance
     */
    public boolean hasDestinationAddressBuilder() {
      return DestinationAddressBuilder != null;
    }

    /**
      * Clears the value of the 'DestinationAddress' field.
      * @return This builder.
      */
    public org.srini.benchmark.encoders.avro.ApplicationHeaderInputBlock.Builder clearDestinationAddress() {
      DestinationAddress = null;
      DestinationAddressBuilder = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'MessagePriority' field.
      * @return The value.
      */
    public java.lang.CharSequence getMessagePriority() {
      return MessagePriority;
    }


    /**
      * Sets the value of the 'MessagePriority' field.
      * @param value The value of 'MessagePriority'.
      * @return This builder.
      */
    public org.srini.benchmark.encoders.avro.ApplicationHeaderInputBlock.Builder setMessagePriority(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.MessagePriority = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'MessagePriority' field has been set.
      * @return True if the 'MessagePriority' field has been set, false otherwise.
      */
    public boolean hasMessagePriority() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'MessagePriority' field.
      * @return This builder.
      */
    public org.srini.benchmark.encoders.avro.ApplicationHeaderInputBlock.Builder clearMessagePriority() {
      MessagePriority = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'DeliveryMonitoring' field.
      * @return The value.
      */
    public int getDeliveryMonitoring() {
      return DeliveryMonitoring;
    }


    /**
      * Sets the value of the 'DeliveryMonitoring' field.
      * @param value The value of 'DeliveryMonitoring'.
      * @return This builder.
      */
    public org.srini.benchmark.encoders.avro.ApplicationHeaderInputBlock.Builder setDeliveryMonitoring(int value) {
      validate(fields()[4], value);
      this.DeliveryMonitoring = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'DeliveryMonitoring' field has been set.
      * @return True if the 'DeliveryMonitoring' field has been set, false otherwise.
      */
    public boolean hasDeliveryMonitoring() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'DeliveryMonitoring' field.
      * @return This builder.
      */
    public org.srini.benchmark.encoders.avro.ApplicationHeaderInputBlock.Builder clearDeliveryMonitoring() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'ObsolescencePeriod' field.
      * @return The value.
      */
    public int getObsolescencePeriod() {
      return ObsolescencePeriod;
    }


    /**
      * Sets the value of the 'ObsolescencePeriod' field.
      * @param value The value of 'ObsolescencePeriod'.
      * @return This builder.
      */
    public org.srini.benchmark.encoders.avro.ApplicationHeaderInputBlock.Builder setObsolescencePeriod(int value) {
      validate(fields()[5], value);
      this.ObsolescencePeriod = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'ObsolescencePeriod' field has been set.
      * @return True if the 'ObsolescencePeriod' field has been set, false otherwise.
      */
    public boolean hasObsolescencePeriod() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'ObsolescencePeriod' field.
      * @return This builder.
      */
    public org.srini.benchmark.encoders.avro.ApplicationHeaderInputBlock.Builder clearObsolescencePeriod() {
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ApplicationHeaderInputBlock build() {
      try {
        ApplicationHeaderInputBlock record = new ApplicationHeaderInputBlock();
        record.Indicator = fieldSetFlags()[0] ? this.Indicator : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.MessageType = fieldSetFlags()[1] ? this.MessageType : (java.lang.Integer) defaultValue(fields()[1]);
        if (DestinationAddressBuilder != null) {
          try {
            record.DestinationAddress = this.DestinationAddressBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("DestinationAddress"));
            throw e;
          }
        } else {
          record.DestinationAddress = fieldSetFlags()[2] ? this.DestinationAddress : (org.srini.benchmark.encoders.avro.DestinationAddress) defaultValue(fields()[2]);
        }
        record.MessagePriority = fieldSetFlags()[3] ? this.MessagePriority : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.DeliveryMonitoring = fieldSetFlags()[4] ? this.DeliveryMonitoring : (java.lang.Integer) defaultValue(fields()[4]);
        record.ObsolescencePeriod = fieldSetFlags()[5] ? this.ObsolescencePeriod : (java.lang.Integer) defaultValue(fields()[5]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ApplicationHeaderInputBlock>
    WRITER$ = (org.apache.avro.io.DatumWriter<ApplicationHeaderInputBlock>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ApplicationHeaderInputBlock>
    READER$ = (org.apache.avro.io.DatumReader<ApplicationHeaderInputBlock>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.Indicator);

    out.writeInt(this.MessageType);

    this.DestinationAddress.customEncode(out);

    out.writeString(this.MessagePriority);

    out.writeInt(this.DeliveryMonitoring);

    out.writeInt(this.ObsolescencePeriod);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.Indicator = in.readString(this.Indicator instanceof Utf8 ? (Utf8)this.Indicator : null);

      this.MessageType = in.readInt();

      if (this.DestinationAddress == null) {
        this.DestinationAddress = new org.srini.benchmark.encoders.avro.DestinationAddress();
      }
      this.DestinationAddress.customDecode(in);

      this.MessagePriority = in.readString(this.MessagePriority instanceof Utf8 ? (Utf8)this.MessagePriority : null);

      this.DeliveryMonitoring = in.readInt();

      this.ObsolescencePeriod = in.readInt();

    } else {
      for (int i = 0; i < 6; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.Indicator = in.readString(this.Indicator instanceof Utf8 ? (Utf8)this.Indicator : null);
          break;

        case 1:
          this.MessageType = in.readInt();
          break;

        case 2:
          if (this.DestinationAddress == null) {
            this.DestinationAddress = new org.srini.benchmark.encoders.avro.DestinationAddress();
          }
          this.DestinationAddress.customDecode(in);
          break;

        case 3:
          this.MessagePriority = in.readString(this.MessagePriority instanceof Utf8 ? (Utf8)this.MessagePriority : null);
          break;

        case 4:
          this.DeliveryMonitoring = in.readInt();
          break;

        case 5:
          this.ObsolescencePeriod = in.readInt();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










